plugins {
    id 'java'
    id("xyz.jpenilla.run-paper") version "2.3.1"
    id "com.gradleup.shadow" version "8.3.0"

}

group = 'org.bookshelfeditor'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "CodeMC"
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    // ADD THIS: ProtocolLib repository
    maven {
        name = "dmulloy2-repo"
        url = "https://repo.dmulloy2.net/nexus/repository/public/"
    }
}

dependencies {
    compileOnly("io.papermc.paper:paper-api:1.21.4-R0.1-SNAPSHOT")
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.15.1")

    implementation 'io.javalin:javalin:6.1.3'
    implementation 'org.slf4j:slf4j-simple:2.0.12'

    // ADD THIS: ProtocolLib dependency
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "5.3.0"
}

// Add this entire block to your build.gradle file
shadowJar {
    relocate 'io.javalin', 'org.bookshelfeditor.libs.javalin'
    relocate 'com.comphenix.protocol', 'org.bookshelfeditor.libs.protocol'
}

tasks {
    runServer {
        // Configure the Minecraft version for our task.
        // This is the only required configuration besides applying the plugin.
        // Your plugin's jar (or shadowJar if present) will be used automatically.
        minecraftVersion("1.21.4")
    }
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.assemble.dependsOn(tasks.shadowJar)
